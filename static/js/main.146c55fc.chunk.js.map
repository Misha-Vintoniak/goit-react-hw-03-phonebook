{"version":3,"sources":["index.module.css","Form/Form.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js","ContactList/ContactList.module.css"],"names":["module","exports","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","onAdd","props","validateForm","id","uuid","reset","onCheckUnick","this","onSubmit","type","placeholder","onChange","disabled","Component","ContactListItem","onRemove","className","s","item","button","onClick","ContactList","contacts","length","map","contact","Filter","filter","target","prototype","PropTypes","string","isRequired","func","App","handleAddContact","handldeUnickName","isExistContact","find","alert","handleChangeFilter","getVisibleContacts","toLowerCase","includes","handleRemoveContact","localStorage","getItem","parseContatcts","JSON","parse","console","log","setItem","stringify","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.146c55fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__Bep1_\"};","import { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport './Form.module.css';\nclass Form extends Component {\n  state = { name: '', number: '' };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidateForm = this.validateForm();\n    if (!isValidateForm) return;\n\n    onAdd({ id: uuid(), name, number });\n    this.reset();\n  };\n\n  validateForm = () => {\n    const { name } = this.state;\n    const { onCheckUnick } = this.props;\n\n    return onCheckUnick(name);\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\" disabled={name === '' || number === ''}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li className={s.item}>\n      {name} : {number}\n      <button className={s.button} onClick={() => onRemove(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\nconst ContactList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n\n  return (\n    <>\n      <h2> Contacts</h2>\n      <ul>\n        {contacts.map(contact => (\n          <ContactListItem {...contact} onRemove={onRemove} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter find contact\"\n    />\n  );\n};\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\n\nimport Form from './Form/Form';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport s from './index.module.css';\n\nclass App extends Component {\n  state = {\n    name: '',\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = ({ id, name, number }) => {\n    const contact = { id, name, number };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  handldeUnickName = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist');\n    return !isExistContact;\n  };\n\n  handleChangeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContatcts = JSON.parse(contacts);\n    if (parseContatcts) {\n      this.setState({ contacts: parseContatcts });\n    }\n    console.log('component DID mounnt');\n  }\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    console.log('component DID Update');\n  }\n  render() {\n    console.log('render');\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <div className={s.container}>\n          <h1>Phonebook</h1>\n          <Form\n            onAdd={this.handleAddContact}\n            onCheckUnick={this.handldeUnickName}\n          />\n\n          <h2>Find contacts</h2>\n          <Filter filter={filter} onChange={this.handleChangeFilter} />\n        </div>\n        <div className={s.container}>\n          <ContactList\n            contacts={visibleContacts}\n            onRemove={this.handleRemoveContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// // import shortid from 'shortid';\n\n// // class App extends Component {\n// //   state = {\n// //     ...INITIAL_STATE,\n// //   };\n// //   loginInputId = shortid.generate();\n\n// //   handleChange = ({ target }) => {\n// //     const { name, value, type, checked } = target;\n// //     this.setState({ [name]: type === 'checkbox' ? checked : value });\n// //   };\n\n// //   handleSubmit = e => {\n// //     e.preventDefault();\n\n// //     // this.props.onSubmit(this.state.login);\n// //     // this.reset();\n// //   };\n\n// //   reset = () => {\n// //     INITIAL_STATE();\n// //   };\n\n// //   render() {\n// //     const { login, email, password, agreed, gender, age } = this.state;\n\n// //     return (\n// //       <form onSubmit={this.handleSubmit}>\n// //         <label>\n// //           Name\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Enter login\"\n// //             name=\"login\"\n// //             value={login}\n// //             onChange={this.handleChange}\n// //             // id={this.loginInputId}\n// //           />\n// //         </label>\n// //         <label>\n// //           Email\n// //           <input\n// //             type=\"email\"\n// //             placeholder=\"Enter email\"\n// //             name=\"email\"\n// //             value={email}\n// //             onChange={this.handleChange}\n// //             // id={this.loginInputId}\n// //           />\n// //         </label>\n// //         <label>\n// //           Password\n// //           <input\n// //             type=\"password\"\n// //             placeholder=\"Enter password\"\n// //             name=\"password\"\n// //             value={password}\n// //             onChange={this.handleChange}\n// //             // id={this.loginInputId}\n// //           />\n// //         </label>\n\n// //         <button type=\"submit\">Sign up as</button>\n// //         <label>\n// //           Agree to terms\n// //           <input\n// //             name=\"checkbox\"\n// //             type=\"checkbox\"\n// //             checked={agreed}\n// //             onChange={this.handleChange}\n// //           />\n// //         </label>\n\n// //         <button type=\"submit\" disabled={!agreed}>\n// //           Sign up as\n// //         </button>\n// //         <h2>Choose your gender</h2>\n// //         <label>\n// //           Male\n// //           <input\n// //             type=\"radio\"\n// //             checked={gender === Gender.MALE}\n// //             name=\"gender\"\n// //             value={Gender.MALE}\n// //             onChange={this.handleChange}\n// //           />\n// //         </label>\n// //         <label>\n// //           Female\n// //           <input\n// //             type=\"radio\"\n// //             checked={gender === Gender.FEMALE}\n// //             name=\"gender\"\n// //             value={Gender.FEMALE}\n// //             onChange={this.handleChange}\n// //           />\n// //         </label>\n// //         <label htmlFor={this.loginInputId}>\n// //           <h2>Choose your age</h2>\n// //           <select name=\"age\" value={age} onChange={this.handleChange}>\n// //             <option value=\"\" disabled>\n// //               ...\n// //             </option>\n// //             <option value=\"18-25\">18-25</option>\n// //             <option value=\"26-35\">26-35</option>\n// //             <option value=\"36+\">36+</option>\n// //           </select>\n// //         </label>\n\n// //         <button type=\"submit\" disabled={!agreed} id={this.loginInputId}>\n// //           Sign up as {login}\n// //         </button>\n// //       </form>\n// //     );\n// //   }\n// // }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1pOXn\",\"button\":\"ContactList_button__23jTM\"};"],"sourceRoot":""}